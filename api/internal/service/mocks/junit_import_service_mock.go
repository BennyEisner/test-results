// Code generated by MockGen. DO NOT EDIT.
// Source: internal/service/junit_import_service.go
//
// Generated by this command:
//
//	mockgen -source=internal/service/junit_import_service.go -destination=internal/service/mocks/junit_import_service_mock.go
//

// Package mock_service is a generated GoMock package.
package mock_service

import (
	reflect "reflect"

	models "github.com/BennyEisner/test-results/internal/models"
	gomock "go.uber.org/mock/gomock"
)

// MockJUnitImportServiceInterface is a mock of JUnitImportServiceInterface interface.
type MockJUnitImportServiceInterface struct {
	ctrl     *gomock.Controller
	recorder *MockJUnitImportServiceInterfaceMockRecorder
	isgomock struct{}
}

// MockJUnitImportServiceInterfaceMockRecorder is the mock recorder for MockJUnitImportServiceInterface.
type MockJUnitImportServiceInterfaceMockRecorder struct {
	mock *MockJUnitImportServiceInterface
}

// NewMockJUnitImportServiceInterface creates a new mock instance.
func NewMockJUnitImportServiceInterface(ctrl *gomock.Controller) *MockJUnitImportServiceInterface {
	mock := &MockJUnitImportServiceInterface{ctrl: ctrl}
	mock.recorder = &MockJUnitImportServiceInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockJUnitImportServiceInterface) EXPECT() *MockJUnitImportServiceInterfaceMockRecorder {
	return m.recorder
}

// ProcessJUnitData mocks base method.
func (m *MockJUnitImportServiceInterface) ProcessJUnitData(projectID, suiteID int64, junitData *models.JUnitTestSuites) (*models.Build, []string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ProcessJUnitData", projectID, suiteID, junitData)
	ret0, _ := ret[0].(*models.Build)
	ret1, _ := ret[1].([]string)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// ProcessJUnitData indicates an expected call of ProcessJUnitData.
func (mr *MockJUnitImportServiceInterfaceMockRecorder) ProcessJUnitData(projectID, suiteID, junitData any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ProcessJUnitData", reflect.TypeOf((*MockJUnitImportServiceInterface)(nil).ProcessJUnitData), projectID, suiteID, junitData)
}
